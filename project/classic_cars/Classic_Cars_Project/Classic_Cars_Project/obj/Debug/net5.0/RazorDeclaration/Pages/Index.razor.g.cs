// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Classic_Cars_Project.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Classic_Cars_Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/_Imports.razor"
using Classic_Cars_Project.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/Pages/Index.razor"
using Classic_Cars_Project.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 94 "/home/hun/Documents/InformationRetrieval/project/classic_cars/Classic_Cars_Project/Classic_Cars_Project/Pages/Index.razor"
       

    #region Varables
    private string searchQuery = "";
    private string selectedBrand = "";
    private string selectedYear = "";
    private int minPrice = 0;
    private int maxPrice = 1000000;

    private int currentPage = 1;
    private int totalPages = 0;
    private const int itemsPerPage = 20;

    private List<Vehicle> searchResults = new List<Vehicle>();
    private List<string> years = new List<string>();
    private List<string> brands = new List<string> {
  "Abarth",
  "Alfa Romeo",
  "Aston Martin",
  "Audi",
  "Bentley",
  "BMW",
  "Bugatti",
  "Cadillac",
  "Chevrolet",
  "Chrysler",
  "CitroÃ«n",
  "Dacia",
  "Daewoo",
  "Daihatsu",
  "Dodge",
  "Donkervoort",
  "DS",
  "Ferrari",
  "Fiat",
  "Fisker",
  "Ford",
  "Honda",
  "Hummer",
  "Hyundai",
  "Infiniti",
  "Iveco",
  "Jaguar",
  "Jeep",
  "Kia",
  "KTM",
  "Lada",
  "Lamborghini",
  "Lancia",
  "Land Rover",
  "Landwind",
  "Lexus",
  "Lotus",
  "Maserati",
  "Maybach",
  "Mazda",
  "McLaren",
  "Mercedes-Benz",
  "MG",
  "Mini",
  "Mitsubishi",
  "Morgan",
  "Nissan",
  "Opel",
  "Peugeot",
  "Porsche",
  "Renault",
  "Rolls-Royce",
  "Rolls",
  "Rover",
  "Saab",
  "Seat",
  "Skoda",
  "Smart",
  "SsangYong",
  "Subaru",
  "Suzuki",
  "Tesla",
  "Toyota",
  "Volkswagen",
  "Volvo" };
    #endregion

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        for (int year = DateTime.Now.Year; year >= 1887; year--)
        {
            years.Add(year.ToString());
        }

        await ApplyFilters();
    }



    #region Page manipulations

    private async Task BrandChanged(ChangeEventArgs e)
    {
        selectedBrand = e.Value.ToString();
        await ApplyFilters();
    }



    private async Task YearChanged(ChangeEventArgs e)
    {
        selectedYear = e.Value.ToString();
        await ApplyFilters();
    }


    private async Task ChangePage(int page)
    {
        currentPage = page;
        await ApplyFilters();
    }


    private void SelectCard(Vehicle vehicle)
    {
        VehicleSelection.SelectVehicle(vehicle);
    }


    private string FormatPrice(decimal price)
    {
        return price == 0 ? "N/A" : $"${price:N0}";
    }

    #endregion

    #region Send Query
    private async Task ApplyFilters()
    {
        var queryParameters = new List<string>();


        if (!string.IsNullOrWhiteSpace(searchQuery))
            queryParameters.Add($"search={Uri.EscapeDataString(searchQuery)}");
        if (!string.IsNullOrWhiteSpace(selectedBrand))
            queryParameters.Add($"brand={Uri.EscapeDataString(selectedBrand)}");
        if (!string.IsNullOrWhiteSpace(selectedYear))
            queryParameters.Add($"year={Uri.EscapeDataString(selectedYear)}");
        if (minPrice > 0)
            queryParameters.Add($"minPrice={minPrice}");
        if (maxPrice < 1000000)
            queryParameters.Add($"maxPrice={maxPrice}");


        queryParameters.Add($"currentPage={currentPage}");
        queryParameters.Add($"itemsPerPage={itemsPerPage}");


        string query = string.Join("&", queryParameters);
        string apiUrl = "http://localhost:8000/api/vehicles/";
        string fullUrl = $"{apiUrl}?{query}";


        try
        {
            searchResults = await Http.GetFromJsonAsync<List<Vehicle>>(fullUrl);

        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Request exception: {e.Message}");

        }
    }
    #endregion


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private VehicleSelectionService VehicleSelection { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
